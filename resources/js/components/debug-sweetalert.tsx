import { useState } from 'react';\nimport { showWelcomeAlert, showSuccessAlert, showErrorAlert, showInfoAlert } from '@/utils/sweetAlert';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\nexport function DebugSweetAlert() {\n    const [debugInfo, setDebugInfo] = useState('');\n\n    const addDebugInfo = (info: string) => {\n        const timestamp = new Date().toLocaleTimeString();\n        setDebugInfo(prev => `${timestamp}: ${info}\\n${prev}`);\n    };\n\n    const testWelcome = () => {\n        addDebugInfo('Testing Welcome Alert...');\n        try {\n            showWelcomeAlert({\n                userName: 'Test User',\n                message: 'This is a test welcome message! ðŸŽ‰',\n                timer: 5000,\n                showConfirmButton: true,\n                position: 'center'\n            });\n            addDebugInfo('Welcome Alert triggered successfully');\n        } catch (error) {\n            addDebugInfo(`Welcome Alert failed: ${error}`);\n        }\n    };\n\n    const testSuccess = () => {\n        addDebugInfo('Testing Success Alert...');\n        try {\n            showSuccessAlert('Success Test!', 'This is a success message test', 3000);\n            addDebugInfo('Success Alert triggered successfully');\n        } catch (error) {\n            addDebugInfo(`Success Alert failed: ${error}`);\n        }\n    };\n\n    const testError = () => {\n        addDebugInfo('Testing Error Alert...');\n        try {\n            showErrorAlert('Error Test!', 'This is an error message test');\n            addDebugInfo('Error Alert triggered successfully');\n        } catch (error) {\n            addDebugInfo(`Error Alert failed: ${error}`);\n        }\n    };\n\n    const testInfo = () => {\n        addDebugInfo('Testing Info Alert...');\n        try {\n            showInfoAlert('Info Test!', 'This is an info message test', 4000);\n            addDebugInfo('Info Alert triggered successfully');\n        } catch (error) {\n            addDebugInfo(`Info Alert failed: ${error}`);\n        }\n    };\n\n    const clearDebug = () => {\n        setDebugInfo('');\n    };\n\n    return (\n        <Card className=\"w-full max-w-2xl mx-auto\">\n            <CardHeader>\n                <CardTitle>SweetAlert Debug Panel</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-2\">\n                    <Button onClick={testWelcome} variant=\"default\">\n                        Test Welcome\n                    </Button>\n                    <Button onClick={testSuccess} variant=\"default\" className=\"bg-green-600 hover:bg-green-700\">\n                        Test Success\n                    </Button>\n                    <Button onClick={testError} variant=\"default\" className=\"bg-red-600 hover:bg-red-700\">\n                        Test Error\n                    </Button>\n                    <Button onClick={testInfo} variant=\"default\" className=\"bg-blue-600 hover:bg-blue-700\">\n                        Test Info\n                    </Button>\n                </div>\n                \n                <div className=\"flex gap-2\">\n                    <Button onClick={clearDebug} variant=\"outline\" size=\"sm\">\n                        Clear Debug Log\n                    </Button>\n                </div>\n\n                {debugInfo && (\n                    <div className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg\">\n                        <h4 className=\"font-semibold mb-2\">Debug Log:</h4>\n                        <pre className=\"text-xs overflow-auto max-h-40 whitespace-pre-wrap\">\n                            {debugInfo}\n                        </pre>\n                    </div>\n                )}\n                \n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    <p><strong>Instructions:</strong></p>\n                    <ul className=\"list-disc list-inside space-y-1\">\n                        <li>Click the test buttons above to check if SweetAlert is working</li>\n                        <li>Check your browser console for any error messages</li>\n                        <li>Make sure you don't have any ad blockers that might block popups</li>\n                        <li>Try refreshing the page if alerts don't appear</li>\n                    </ul>\n                </div>\n            </CardContent>\n        </Card>\n    );\n}