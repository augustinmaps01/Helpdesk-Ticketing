import jsPDF from 'jspdf';
import { Ticket } from '@/types/ticket';
import { getStatusColor, getPriorityColor } from '@/utils/ticketHelpers';

export const exportTicketToPDF = async (ticket: Ticket) => {
    const doc = new jsPDF();
    
    // Header
    doc.setFontSize(20);
    doc.setTextColor(59, 130, 246); // Blue color
    doc.text('IT Helpdesk Support Ticket', 20, 30);
    
    // Ticket number
    doc.setFontSize(14);
    doc.setTextColor(0, 0, 0);
    doc.text(`Ticket #: ${ticket.ticket_no}`, 20, 50);
    
    // Status badge
    doc.setFontSize(12);
    const statusColor = getStatusColor(ticket.status);
    doc.setTextColor(statusColor.r, statusColor.g, statusColor.b);
    doc.text(`Status: ${ticket.status.toUpperCase()}`, 20, 65);
    
    // Priority
    const priorityColor = getPriorityColor(ticket.priority);
    doc.setTextColor(priorityColor.r, priorityColor.g, priorityColor.b);
    doc.text(`Priority: ${ticket.priority.toUpperCase()}`, 120, 65);
    
    // Reset color
    doc.setTextColor(0, 0, 0);
    
    // Subject
    doc.setFontSize(14);
    doc.text('Subject:', 20, 85);
    doc.setFontSize(12);
    const subjectLines = doc.splitTextToSize(ticket.subject, 160);
    doc.text(subjectLines, 20, 95);
    
    // Description
    let currentY = 110 + (subjectLines.length * 6);
    doc.setFontSize(14);
    doc.text('Description:', 20, currentY);
    currentY += 10;
    doc.setFontSize(12);
    const descLines = doc.splitTextToSize(ticket.description, 160);
    doc.text(descLines, 20, currentY);
    
    // Submitter info
    currentY += (descLines.length * 6) + 15;
    doc.setFontSize(14);
    doc.text('Submitted By:', 20, currentY);
    currentY += 10;
    doc.setFontSize(12);
    doc.text(`Name: ${ticket.submitter?.name}`, 20, currentY);
    currentY += 8;
    doc.text(`Email: ${ticket.submitter?.email}`, 20, currentY);
    currentY += 8;
    if (ticket.submitter?.mobile_no) {
        doc.text(`Mobile: ${ticket.submitter.mobile_no}`, 20, currentY);
        currentY += 8;
    }
    doc.text(`Position: ${ticket.submitter?.position}`, 20, currentY);
    currentY += 8;
    doc.text(`Department: ${ticket.submitter?.department?.name}`, 20, currentY);
    
    // Assigned to
    currentY += 15;
    doc.setFontSize(14);
    doc.text('Assigned To:', 20, currentY);
    currentY += 10;
    doc.setFontSize(12);
    if (ticket.assignee) {
        doc.text(`Name: ${ticket.assignee.name}`, 20, currentY);
        currentY += 8;
        doc.text(`Email: ${ticket.assignee.email}`, 20, currentY);
    } else {
        doc.text('Not assigned yet', 20, currentY);
    }
    
    // Approval information
    if (ticket.approver) {
        currentY += 15;
        doc.setFontSize(14);
        doc.text('Approval Information:', 20, currentY);
        currentY += 10;
        doc.setFontSize(12);
        doc.text(`Approved by: ${ticket.approver.name}`, 20, currentY);
        currentY += 8;
        doc.text(`Role: ${ticket.approver.role}`, 20, currentY);
        currentY += 8;
        if (ticket.approved_at) {
            doc.text(`Approved at: ${new Date(ticket.approved_at).toLocaleString()}`, 20, currentY);
        }
    }
    
    // Timestamps
    currentY += 15;
    doc.setFontSize(14);
    doc.text('Timeline:', 20, currentY);
    currentY += 10;
    doc.setFontSize(12);
    doc.text(`Created: ${new Date(ticket.created_at).toLocaleString()}`, 20, currentY);
    currentY += 8;
    doc.text(`Updated: ${new Date(ticket.updated_at).toLocaleString()}`, 20, currentY);
    
    // Category
    currentY += 15;
    doc.setFontSize(14);
    doc.text('Category:', 20, currentY);
    currentY += 10;
    doc.setFontSize(12);
    doc.text(ticket.category?.name || 'Not specified', 20, currentY);
    
    // Footer
    currentY += 20;
    doc.setFontSize(10);
    doc.setTextColor(128, 128, 128);
    doc.text('Generated by IT Helpdesk System', 20, currentY);
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 20, currentY + 8);
    
    // Save the PDF
    doc.save(`ticket-${ticket.ticket_no}.pdf`);
};